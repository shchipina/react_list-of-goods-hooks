{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","DEFAULT","selectedOrder","setSelectedOrder","isReversed","setIsReversed","visibleGoods","goods","sort","first","second","SORT_BY_ALPHABET","localeCompare","SORT_BY_LENGTH","length","reverse","sortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,4BAAAA,E,yBAAAA,M,KAmCE,IAAME,EAAgB,WAC3B,MAA0CC,mBAASH,EAASI,SAA5D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAjCR,SACEC,EACAL,EACAE,GAEA,IAAME,EAAY,YAAOC,GAqBzB,OAnBIL,GACFI,EAAaE,MAAK,SAACC,EAAeC,GAChC,OAAQR,GACN,KAAKL,EAASc,iBACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,eACZ,OAAOJ,EAAMK,OAASJ,EAAOI,OAE/B,QACE,OAAO,MAKXV,GACFE,EAAaS,UAGRT,EAOcU,CAAYlB,EAAiBI,EAAeE,GAOjE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAkBL,EAASc,mBAEzCS,QAAS,kBAAMjB,EAAiBN,EAASc,mBAL3C,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAkBL,EAASgB,iBAEzCO,QAAS,kBAAMjB,EAAiBN,EAASgB,iBAL3C,4BASA,wBACEK,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAaf,IAClDgB,QAAS,kBAAMf,GAAeD,IAHhC,sBAQGA,GAAcF,IAEb,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAxCQ,WAClBjB,EAAiBN,EAASI,SAC1BI,GAAc,IAmCN,sBAWN,6BAEIC,EAAae,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC3GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.319ea686.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  DEFAULT = '',\n  SORT_BY_ALPHABET = 'alphabet',\n  SORT_BY_LENGTH = 'length',\n}\n\nfunction sortedGoods(\n  goods: string[],\n  selectedOrder: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (selectedOrder) {\n    visibleGoods.sort((first: string, second: string) => {\n      switch (selectedOrder) {\n        case SortType.SORT_BY_ALPHABET:\n          return first.localeCompare(second);\n\n        case SortType.SORT_BY_LENGTH:\n          return first.length - second.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [selectedOrder, setSelectedOrder] = useState(SortType.DEFAULT);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods = sortedGoods(goodsFromServer, selectedOrder, isReversed);\n\n  const resetButton = () => {\n    setSelectedOrder(SortType.DEFAULT);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': selectedOrder !== SortType.SORT_BY_ALPHABET,\n          })}\n          onClick={() => setSelectedOrder(SortType.SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': selectedOrder !== SortType.SORT_BY_LENGTH,\n          })}\n          onClick={() => setSelectedOrder(SortType.SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n        {\n          (isReversed || selectedOrder) && (\n\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetButton}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}